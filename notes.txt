
carousel on homepage

locations have shipping methods defined




{{--
								<div id="homepageCarousel" class="carousel slide" data-ride="carousel">
									
									<ol class="carousel-indicators">
										<li data-target="#homepageCarousel" data-slide-to="0" class="active"></li>
										<li data-target="#homepageCarousel" data-slide-to="1"></li>
										<li data-target="#homepageCarousel" data-slide-to="2"></li>
									</ol>
									
									<div class="carousel-inner">
										<div class="carousel-item active">
											<img class="d-block w-100" src="http://animals.sandiegozoo.org/sites/default/files/2016-09/animals_hero_armadillo_0.jpg" alt="First slide">
											<div class="carousel-caption">
												<h2>Heading 1.2</h2>
												<h4>Heading 1.4</h4>
											</div>
										</div>
										<div class="carousel-item">
											<img class="d-block w-100 img-fluid align-self-center" src="http://animals.sandiegozoo.org/sites/default/files/2016-10/animals_hero_fennec2.jpg" alt="Second slide">
											<div class="carousel-caption">
												<h2>Heading 2.2</h2>
												<h4>Heading 2.4</h4>
											</div>
										</div>
										<div class="carousel-item">
											<img class="d-block w-100 img-fluid align-self-center" src="http://animals.sandiegozoo.org/sites/default/files/2016-09/animals_hero_panda.jpg" alt="Third slide">
											<div class="carousel-caption">
												<h2>Heading 3.2</h2>
												<h4>Heading 3.4</h4>
											</div>
										</div>
									</div>
									
									<a class="carousel-control-prev" href="#homepageCarousel" role="button" data-slide="prev"><span class="carousel-control-prev-icon" aria-hidden="true"></span><span class="sr-only">Previous</span></a>
									<a class="carousel-control-next" href="#homepageCarousel" role="button" data-slide="next"><span class="carousel-control-next-icon" aria-hidden="true"></span><span class="sr-only">Next</span></a>
								</div>
								--}}









### To Do ###

Pricing and Quantities 
 
Delivery estimates - when the order is placed and is out of stock a note would be shown that the delivery window will be confirmed by a member of the team – agreed that this can be shown at commodity level.  

The option for 'part delivery' should be added to the order page before confirming the order. If selected this would notify the Customer Care team to arrange for the 'in stock' items to be sent when picked but to arrange for the remainder of the order to go out when it arrives.
 



### Pricing Rules / Criteria ###
 
1. If a price agreement exists for a customer then this price will be used and displayed at commodity level and basket.
 
2. If there is no price agreement then the list price is used with the relevant price band to discount the price for the customer at commodity level and basket.
 
3. If there is no list price then it will use the cost price plus the mark up (as per the price band) at commodity level and basket.
 
a. If the item is in stock and we are using cost price then this is not restricted by a ‘date’.
b. If the item is not in stock and we are using cost price then the price is only valid if it is within the last 6 months.
 
4. If there is an item with no price (or it is out of stock & older than the 6 month cut off period) then it will show nothing and not allow you to add to basket so will default to the ‘enquire’ status at commodity level.
 
5. If a price is changed in the system this will need to notify/ping the system to know a change has been made.







echo "" > storage/logs/laravel.log

Look into: https://github.com/spatie/laravel-activitylog

Setup daemon's for 

php artisan queue:work --queue=users.jobs
php artisan queue:work --queue=users.events

php artisan queue:work --queue=locations.jobs
php artisan queue:work --queue=locations.events

php artisan queue:work --queue=companies.jobs

php artisan queue:work --queue=orders.jobs
php artisan queue:work --queue=orders.events
php artisan queue:work --queue=orders.notifications
php artisan queue:work --queue=orders.broadcasts

php artisan queue:work --queue=products.events

php artisan queue:work --queue=keywords.events

php artisan queue:work --queue=default



php artisan queue:work --queue=users.jobs,users.events,locations.jobs,locations.events,orders.jobs,orders.events,orders.notifications,orders.broadcasts,companies.jobs,products.events,keywords.events,default


Setup cron for scheduled tasks
		
{
	"event_id": "54321",
	"event_type": "orders.updated",
	"data": [{
		"id": 1,
		"status_id": 9
	}]
}			
			
{
	"event_id": "54321",
	"event_type": "products.updated",
	"data": [{
		"Id": 1,
		"CategoryId": 1
	}]
}

{
	"event_id": "54321",
	"event_type": "product_standard.updated",
	"data": [{
		"ProductId": 1,
		"StandardId": 1
	},
	{
		"ProductId": 1,
		"StandardId": 2
	},
	{
		"ProductId": 2,
		"StandardId": 3
	}]
}


brew install homebrew/php/php71-pcntl

php -i | grep pcntl

cd /usr/local/Cellar/php71-pcntl/7.1.8_15

ls -al

cp pcntl.so /Applications/MAMP/bin/php/php7.1.8/lib/php/extensions/no-debug-non-zts-20160303/

php -i | grep pcntl


window.CMS.loaded = new CustomEvent('loaded', {
	bubbles: true,
	cancelable: false
});

window.dispatchEvent(window.CMS.loaded);

window.addEventListener('loaded', event => {
	console.info('Event is: ', event);
});

// Cache the pages frontend
$cachingEnabled = config('cache.enabled');

if ($cachingEnabled) {
	$pages = Cache::get('pages');
	
	if (is_null($pages)) {
		$pages = $this->getPages();
		
		$minutes = config('cache.expiry_in_minutes');
		
		Cache::put('pages', $pages, $minutes);
	}
} else {
	$pages = $this->getPages();
}

Cache the articles frontend

$cachingEnabled = config('cache.enabled');

if ($cachingEnabled) {
	$articles = Cache::get('articles');
	
	if (is_null($articles)) {
		$articles = $this->getArticles();
		
		$minutes = config('cache.expiry_in_minutes');
		
		Cache::put('articles', $articles, $minutes);
	}
} else {
	$articles = $this->getArticles();
}

@component('_components.cart.addProductCommodity', [
	'id' => $productCommodity->id,
	'instance' => 'cart', 
	'action' => 'secret',
	'extraClasses' => 'btn btn-outline-success',
	'redirectTo' => $redirectTo
])
@endcomponent
				
@if (!$wishlistCartProductCommodityIds->contains($productCommodity->id))
	<div style="margin-top: 10px;font-size: 12px;">
		@component('_components.cart.addProductCommodity', [
			'id' => $productCommodity->id, 
			'instance' => 'wishlist', 
			'action' => 'secret',
			'extraClasses' => 'btn-unstyled-gf-blue-gray',
			'redirectTo' => $redirectTo
		])
		@endcomponent
	</div>
@endif


Node installation Steps on Ubuntu 16.4
--------------------------------------

sudo service apache2 stop

sudo service mysql stop

sudo apt-get update

sudo apt-get upgrade

curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -

sudo apt-get install nodejs

sudo npm install -g npm 

sudo apt-get install php7.0-sqlite

sudo apt autoremove

sudo chmod -R 777 bootstrap/cache

sudo chmod -R 777 storage

sudo chmod -R 777 storage/logs

sudo touch storage/logs/laravel.log

sudo chmod 775 storage/logs/laravel.log

sudo yarn install

sudo composer update

sudo service apache2 restart

sudo service mysql restart